name: Azure data preperation, training and deployment

on:
  workflow_dispatch:
    inputs:
      create_compute:
        description: 'Create compute'
        required: false
        type: boolean
        default: true
      train_model:
        description: 'Train model'
        required: false
        type: boolean
        default: true
      skip_training_pipeline:
        description: 'Skip training pipeline'
        required: false
        type: boolean
        default: false
      deploy_model:
        description: 'Deploy model'
        required: false
        type: boolean
        default: true

env:
  GROUP: MLops
  WORKSPACE: ornelis-niels-ml
  LOCATION: westeurope
  CREATE_COMPUTE: ${{ github.event.inputs.create_compute }}
  TRAIN_MODEL: ${{ github.event.inputs.train_model }}
  SKIP_TRAINING_PIPELINE: ${{ github.event.inputs.skip_training_pipeline }}
  DEPLOY_MODEL: ${{ github.event.inputs.deploy_model }}

jobs:
  azure-pipeline:
    if: ${{ inputs.skip_training_pipeline != 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Create compute'
        uses: azure/CLI@v1
        id: azure-ml-compute
        if: ${{ inputs.create_compute }}
        with:
          azcliversion: 2.53.0
          inlineScript: |
            az extension add --name ml -y --debug
            az configure --defaults group=$GROUP workspace=$WORKSPACE location=$LOCATION
            az ml compute create --file ./environments/compute.yaml

      - name: 'Start compute'
        uses: azure/CLI@v1
        id: azure-ml-compute-start
        if: ${{ steps.azure-ml-compute.outcome == 'success' || steps.azure-ml-compute.outcome == 'skipped' }}
        with:
          azcliversion: 2.53.0
          inlineScript: |
            az extension add --name ml -y
            az configure --defaults group=$GROUP workspace=$WORKSPACE location=$LOCATION
            az ml compute start --name cli-MLops-compute
        continue-on-error: true
      
      - name: 'Cleanup Azure stop compute'
        uses: azure/CLI@v1
        id: azure-ml-compute-stop
        if: always()
        with:
          azcliversion: 2.53.0
          inlineScript: |
            az extension add --name ml -y
            az configure --defaults group=$GROUP workspace=$WORKSPACE location=$LOCATION
            az ml compute stop --name cli-MLops-compute
        continue-on-error: true
      
      